{"version":3,"sources":["../../../../assets/Script/assets/Script/XXLGame.js"],"names":["_llkGame","require","cc","Class","extends","properties","showTip","Sprite","onLoad","row","col","_probability","arr","start","getComponent","node","active","setLocalZOrder","winSize","director","getWinSize","_arrs","getSortArrs","picArrs","slice","length","_boxWidth","width","i","j","o","point","box","val","pos","isValid","index","x","y","p","type","newBox","setPosition","setTag","getAroundPoints","result","leftPoint","push","rightPoint","topPoint","bottomPoint","getChunk","existIdxs","isFirst","idx","aAroundPoints","concat","forEach","indexOf","item","clearPoints","points","_map","maxIdx","destroy","parseInt","movePoints","scheduleOnce","checkClickEnable","len","nextIdx","target","runAction","moveTo","enable","setDisable","every","gameOver","setNextRound","_spNode","setColor","color","count","maxY","unshift","createColBox","obj","random","random0To1","topBox","instantiate","addChild","dynamicNode","Node","sp","addComponent","spriteFrame","setScale","on","EventType","TOUCH_END","event","currentTarget","getTag","targetPoints","log"],"mappings":"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","file":"XXLGame.js","sourceRoot":"../../../../assets/Script","sourcesContent":["let _llkGame = require('./Game2');\ncc.Class({\n    extends: _llkGame,\n\n    properties: {\n        showTip: cc.Sprite\n    },\n\n    onLoad() {\n        \n        this.row = 4;\n        this.col = 4;\n        this._probability = 0.01; // 炸弹几率\n\n        // 存放所有盒子的数据结构\n        this.arr = [];\n    },\n\n    start() {\n        // 游戏结束的弹窗\n        this.showTip.getComponent(cc.Sprite).node.active = false;\n        this.showTip.getComponent(cc.Sprite).node.setLocalZOrder(100);\n\n        // 屏幕\n        const winSize = cc.director.getWinSize();\n        // 获取随机数组\n        this._arrs = this.getSortArrs(this.picArrs.slice(0, 4), this.row, this.col);\n        if (this._arrs.length === 0) return;\n\n        // 计算每个盒子宽度\n        this._boxWidth = winSize.width / this.col;\n        for (let i = 0; i < this.row; i++) {\n            for (let j = 0; j < this.col; j++) {\n                let o = {\n                    point: [j, i],\n                    box: null,\n                    val: null,\n                    pos: null,\n                    isValid: true,\n                    index: j + i * this.col\n                }\n                let x = -winSize.width / 2 + (winSize.width - this._boxWidth * this.col) / 2 + (j + 1 / 2) * this._boxWidth;\n                let y = 270 - i * this._boxWidth;\n                o.pos = cc.p(x, y);\n                let index = o.index;\n                o.val = this._arrs[index].type;\n                let box = this.newBox(o.val - 1);\n                box.setPosition(o.pos);\n                box.setTag(o.index);\n                o.box = box;\n                this.arr[o.index] = o;\n            }\n        }\n    },\n\n    getAroundPoints(point) {\n        let result = [];\n        if (!point.isValid) return result;\n        // 上下炸弹 炸整列 不用判断是否是isValid\n        let leftPoint = this.arr[point.index - 1];\n        if (leftPoint && leftPoint.box && leftPoint.isValid && point.point[0] !== 0 && leftPoint.val === point.val) {\n            result.push(leftPoint);\n        }\n        let rightPoint = this.arr[point.index + 1];\n        if (rightPoint && rightPoint.box && rightPoint.isValid && point.point[0] !== this.col - 1 && rightPoint.val === point.val) {\n            result.push(rightPoint);\n        }\n        let topPoint = this.arr[point.index - this.col];\n        if (topPoint && topPoint.box && topPoint.isValid && point.point[1] !== 0 && topPoint.val === point.val) {\n            result.push(topPoint);\n        }\n        let bottomPoint = this.arr[point.index + this.col];\n        if (bottomPoint && bottomPoint.box && bottomPoint.isValid && point.point[1] !== this.row - 1 && bottomPoint.val === point.val) {\n            result.push(bottomPoint);\n        }\n        return result;\n    },\n\n    getChunk(point, existIdxs, result, isFirst) {\n        if (isFirst) {\n            if (point.val === 9) {\n                for (let i = 0; i < this.row; i++) {\n                    let idx = point.point[0] + i * this.col;\n                    if (this.arr[idx].box) {\n                        result.push(this.arr[idx]);\n                    }\n                }\n                return result\n            } else if (point.val === 10) { // 左右炸弹 炸整行 不用判断是否是isValid\n                for (let i = 0; i < this.col; i++) {\n                    let idx = i + this.col * point.point[1];\n                    if (this.arr[idx].box) {\n                        result.push(this.arr[idx]);\n                    }\n                }\n                return result\n            }\n        }\n\n        let aAroundPoints = [point].concat(this.getAroundPoints(point));\n        aAroundPoints.forEach(item => {\n            if (existIdxs.indexOf(item.index) < 0) {\n                existIdxs.push(item.index);\n                result.push(item);\n                result.concat(this.getChunk(item, existIdxs, result, false));\n            }\n        })\n        return result;\n    },\n\n    clearPoints(points) {\n        let _map = {};\n        points.forEach(item => {\n            let o = _map[item.point[0]];\n            if (!o) {\n                o = {\n                    maxIdx: item.index\n                }\n            } else {\n                item.index > o.maxIdx && (o.maxIdx = item.index);\n            }\n            item.box.destroy();\n            item.box = null;\n            item.val = null;\n            _map[item.point[0]] = o;\n        });\n\n        for (let x in _map) {\n            let maxIdx = _map[x].maxIdx;\n            let result = [];\n            for (let i = 0; i < this.row; i++) {\n                let idx = parseInt(x) + i * this.col;\n                if (this.arr[idx] && idx < maxIdx) result.push(this.arr[idx]);\n            }\n            this.movePoints(result, maxIdx);\n        }\n        this.scheduleOnce(() => {\n            this.checkClickEnable();\n        }, .3)\n    },\n\n    movePoints(points, maxIdx) {\n        for (let i = points.length - 1; i >= 0; i--) {\n            let item = points[i];\n            let len = 0;\n            for (let j = item.point[1] + 1; j < this.row; j++) {\n                var index = item.point[0] + j * this.col;\n                if (!this.arr[index].box) len++;\n            }\n            let nextIdx = item.index + this.col * len;\n            let target = this.arr[nextIdx];\n            target.val = item.val;\n            target.box = item.box;\n            if (target.box) {\n                target.box.setTag(target.index);\n                target.box.runAction(cc.moveTo(.2, target.pos));\n            }\n            item.val = null;\n            item.box = null;\n        }\n    },\n\n    checkClickEnable() {\n        let enable = false;\n        this.arr.forEach(item => {\n            if (item.box) {\n                let points = this.getAroundPoints(item);\n                if (item.val === 9 || item.val === 10 || points.length > 0) {\n                    enable = true;\n                    return;\n                }\n            }\n        })\n        if (!enable) {\n            this.setDisable();\n            if (this.arr.every(item => item.box)) {\n                this.gameOver();\n            } else {\n                this.setNextRound();\n            }\n        }\n    },\n\n    setDisable() {\n        this.arr.forEach(item => {\n            if (item.box) {\n                item.isValid = false;\n                item.box._spNode.setColor(cc.color(150, 150, 150));\n            }\n        })\n    },\n\n    setNextRound() {\n        let _map = {}\n        this.arr.forEach(item => {\n            if (!item.box) {\n                let o = _map[item.point[0]];\n                if (!o) {\n                    o = {\n                        count: 1,\n                        maxY: item.point[1],\n                        points: [item]\n                    }\n                } else {\n                    o.count += 1;\n                    item.point[1] > o.maxY && (o.maxY = item.point[1]);\n                    o.points.unshift(item)\n                }\n                _map[item.point[0]] = o;\n            }\n        })\n        for (let x in _map) {\n            this.createColBox(x, _map[x])\n        }\n        this.scheduleOnce(() => {\n            this.checkClickEnable();\n        }, 0.3)\n    },\n\n    createColBox(x, obj) {\n        let len = obj.count;\n        let maxY = obj.maxY;\n        let points = obj.points;\n        for (let i = 0; i < len; i++) {\n            let random = cc.random0To1();\n            let val;\n            if (random < this._probability) {\n                val = 8;\n            } else if (random > this._probability && random < this._probability * 2) {\n                val = 9;\n            } else {\n                val = (0 | cc.random0To1() * (this.picArrs.length - 2));\n            }\n            let box = this.newBox(val);\n            let topBox = this.arr[x];\n            box.setPosition(cc.p(topBox.pos.x, topBox.pos.y + this._boxWidth * (i + 1)));\n            let target = points[i];\n            box.setTag(target.index);\n            target.box = box;\n            target.val = val + 1;\n            target.isValid = true;\n            box.runAction(cc.moveTo(0.2, target.pos));\n        }\n    },\n\n    newBox(index) {\n        let box = cc.instantiate(this.box);\n        this.node.addChild(box);\n\n        let dynamicNode = new cc.Node();\n        let sp = dynamicNode.addComponent(cc.Sprite);\n        sp.spriteFrame = this.picArrs[index];\n        box._spNode = dynamicNode;\n        box.addChild(dynamicNode)\n\n        box.setScale(this._boxWidth / box.width);\n\n        // 绑定点击事件\n        box.on(cc.Node.EventType.TOUCH_END, (event) => {\n            let idx = event.currentTarget.getTag();\n            if (!this.arr[idx].box) return;\n            let point = this.arr[idx];\n            if (!point.isValid || !point.box) return;\n            let targetPoints = this.getChunk(point, [], [], true);\n            targetPoints.length > 1 && this.clearPoints(targetPoints);\n        })\n        return box;\n    },\n\n    gameOver() {\n        cc.log(\"游戏结束\");\n        this.showTip.getComponent(cc.Sprite).node.active = true;\n    }\n\n});\n"]}