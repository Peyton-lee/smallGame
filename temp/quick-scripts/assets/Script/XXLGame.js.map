{"version":3,"sources":["XXLGame.js"],"names":["_llkGame","require","cc","Class","extends","properties","showTip","Sprite","onLoad","row","col","arr","start","getComponent","node","active","setLocalZOrder","winSize","director","getWinSize","_arrs","getSortArrs","picArrs","slice","length","_boxWidth","width","i","j","o","point","box","val","pos","isValid","index","x","y","p","type","newBox","setPosition","setTag","getAroundPoints","result","leftPoint","push","rightPoint","topPoint","bottomPoint","getChunk","existIdxs","aAroundPoints","concat","forEach","indexOf","item","clearPoints","points","_map","count","minIdx","destroy","_colIdx","_ids","filter","map","movePoints","scheduleOnce","checkClickEnable","len","target","runAction","moveTo","enable","setDisable","every","gameOver","setNextRound","_spNode","setColor","color","maxY","unshift","createColBox","obj","random0To1","topBox","instantiate","addChild","dynamicNode","Node","sp","addComponent","spriteFrame","setScale","on","EventType","TOUCH_END","event","idx","currentTarget","getTag","targetPoints","log"],"mappings":"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","file":"XXLGame.js","sourceRoot":"../../../../assets/Script","sourcesContent":["let _llkGame = require('./Game2');\ncc.Class({\n    extends: _llkGame,\n\n    properties: {\n        showTip: cc.Sprite\n    },\n\n    onLoad() {\n        this.row = 4;\n        this.col = 4;\n\n        // 存放所有盒子的数据结构\n        this.arr = [];\n    },\n\n    start() {\n        this.showTip.getComponent(cc.Sprite).node.active = false;\n        this.showTip.getComponent(cc.Sprite).node.setLocalZOrder(100);\n        \n        // 屏幕\n        const winSize = cc.director.getWinSize();\n        // 获取随机数组\n        this._arrs = this.getSortArrs(this.picArrs.slice(0, 4), this.row, this.col);\n        if (this._arrs.length === 0) return;\n\n        // 计算每个盒子宽度\n        this._boxWidth = winSize.width / this.col;\n        for (let i = 0; i < this.row; i++) {\n            for (let j = 0; j < this.col; j++) {\n                let o = {\n                    point: [j, i],\n                    box: null,\n                    val: null,\n                    pos: null,\n                    isValid: true,\n                    index: j + i * this.col\n                }\n                let x = -winSize.width / 2 + (winSize.width - this._boxWidth * this.col) / 2 + (j + 1 / 2) * this._boxWidth;\n                let y = 270 - i * this._boxWidth;\n                o.pos = cc.p(x, y);\n                let index = o.index;\n                o.val = this._arrs[index].type;\n                let box = this.newBox(o.val - 1);\n                box.setPosition(o.pos);\n                box.setTag(o.index);\n                o.box = box;\n                this.arr[o.index] = o;\n            }\n        }\n    },\n\n    getAroundPoints(point) {\n        let result = [];\n        if (!point.isValid) return result;\n        let leftPoint = this.arr[point.index - 1];\n        if (leftPoint && leftPoint.box && leftPoint.isValid && point.point[0] !== 0 && leftPoint.val === point.val) {\n            result.push(leftPoint);\n        }\n        let rightPoint = this.arr[point.index + 1];\n        if (rightPoint && rightPoint.box && rightPoint.isValid && point.point[0] !== this.col - 1 && rightPoint.val === point.val) {\n            result.push(rightPoint);\n        }\n        let topPoint = this.arr[point.index - this.col];\n        if (topPoint && topPoint.box && topPoint.isValid && point.point[1] !== 0 && topPoint.val === point.val) {\n            result.push(topPoint);\n        }\n        let bottomPoint = this.arr[point.index + this.col];\n        if (bottomPoint && bottomPoint.box && bottomPoint.isValid && point.point[1] !== this.row - 1 && bottomPoint.val === point.val) {\n            result.push(bottomPoint);\n        }\n        return result;\n    },\n\n    getChunk(point, existIdxs, result) {\n        let aAroundPoints = [point].concat(this.getAroundPoints(point));\n        aAroundPoints.forEach(item => {\n            if (existIdxs.indexOf(item.index) < 0) {\n                existIdxs.push(item.index);\n                result.push(item);\n                result.concat(this.getChunk(item, existIdxs, result));\n            }\n        })\n        return result;\n    },\n\n    clearPoints(points) {\n        let _map = {};\n        points.forEach(item => {\n            let o = _map[item.point[0]];\n            if (!o) {\n                o = {\n                    count: 1,\n                    minIdx: item.index\n                }\n            } else {\n                o.count += 1;\n                item.index < o.minIdx && (o.minIdx = item.index);\n            }\n            item.box.destroy();\n            item.box = null;\n            item.val = null;\n            _map[item.point[0]] = o;\n        })\n\n        for (let x in _map) {\n            let minIdx = _map[x].minIdx;\n            let _colIdx = [];\n            for (let i = 0; i < this.row; i++) _colIdx.push(+x + i * this.col);\n            let _ids = _colIdx.filter(item => {\n                if (item < minIdx) return '' + item;\n            })\n            let result = _ids.map(item => this.arr[item]);\n            this.movePoints(_map[x].count, result);\n        }\n        this.scheduleOnce(() => {\n            this.checkClickEnable();\n        }, 0.5)\n    },\n\n    movePoints(len, points) {\n        for (let i = points.length - 1; i >= 0; i--) {\n            let item = points[i];\n            let target = this.arr[item.index + this.col * len];\n            target.val = item.val;\n            target.box = item.box;\n            if (target.box) {\n                target.box.setTag(target.index);\n                target.box.runAction(cc.moveTo(0.2, target.pos));\n            }\n            item.val = null;\n            item.box = null;\n        }\n    },\n\n    checkClickEnable() {\n        let enable = false;\n        this.arr.forEach(item => {\n            if (item.box) {\n                let points = this.getAroundPoints(item);\n                if (points.length > 0) {\n                    enable = true;\n                    return;\n                }\n            }\n        })\n        if (!enable) {\n            this.setDisable();\n            if (this.arr.every(item => item.box)) {\n                this.gameOver();\n            } else {\n                this.setNextRound();\n            }\n        }\n    },\n\n    setDisable() {\n        this.arr.forEach(item => {\n            if (item.box) {\n                item.isValid = false;\n                item.box._spNode.setColor(cc.color(150, 150, 150));\n            }\n        })\n    },\n\n    setNextRound() {\n        let _map = {}\n        this.arr.forEach(item => {\n            if (!item.box) {\n                let o = _map[item.point[0]];\n                if (!o) {\n                    o = {\n                        count: 1,\n                        maxY: item.point[1],\n                        points: [item]\n                    }\n                } else {\n                    o.count += 1;\n                    item.point[1] > o.maxY && (o.maxY = item.point[1]);\n                    o.points.unshift(item)\n                }\n                _map[item.point[0]] = o;\n            }\n        })\n        for (let x in _map) {\n            this.createColBox(x, _map[x])\n        }\n        this.scheduleOnce(() => {\n            this.checkClickEnable();\n        }, 0.3)\n    },\n\n    createColBox(x, obj) {\n        let len = obj.count;\n        let maxY = obj.maxY;\n        let points = obj.points;\n        for (let i = 0; i < len; i++) {\n            let val = 0 | cc.random0To1() * this.picArrs.length;\n            let box = this.newBox(val);\n            let topBox = this.arr[x];\n            box.setPosition(cc.p(topBox.pos.x, topBox.pos.y + this._boxWidth * (i + 1)));\n            let target = points[i];\n            box.setTag(target.index);\n            target.box = box;\n            target.val = val + 1;\n            target.isValid = true;\n            box.runAction(cc.moveTo(0.2, target.pos));\n        }\n    },\n\n    newBox(index) {\n        let box = cc.instantiate(this.box);\n        this.node.addChild(box);\n\n        let dynamicNode = new cc.Node();\n        let sp = dynamicNode.addComponent(cc.Sprite);\n        sp.spriteFrame = this.picArrs[index];\n        box._spNode = dynamicNode;\n        box.addChild(dynamicNode)\n\n        box.setScale(this._boxWidth / box.width);\n\n        // 绑定点击事件\n        box.on(cc.Node.EventType.TOUCH_END, (event) => {\n            let idx = event.currentTarget.getTag();\n            if (!this.arr[idx].box) return;\n            let point = this.arr[idx];\n            if (!point.isValid || !point.box) return;\n            let targetPoints = this.getChunk(point, [], []);\n            targetPoints.length > 1 && this.clearPoints(targetPoints);\n        })\n        return box;\n    },\n    \n    gameOver() {\n        cc.log(\"游戏结束\");\n        this.showTip.getComponent(cc.Sprite).node.active = true;\n    }\n\n});\n"]}