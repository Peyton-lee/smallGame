{"version":3,"sources":["Game2.js"],"names":["Global","require","cc","Class","extends","Component","properties","box","default","type","Prefab","picArrs","SpriteFrame","refreshBtn","Button","backBtn","ctor","arr","_boxArrs","selectId","clickId","pass","_lineNodes","row","_type","col","onLoad","gameStart","node","on","Node","EventType","TOUCH_END","director","loadScene","length","forEach","isValid","item","destroy","_randomArr","slice","winSizeW","getWinSize","width","showW","arrs","getSortArrs","_boxWidth","i","j","o","point","val","pos","index","x","y","p","instantiate","addChild","dynamicNode","sp","addComponent","Sprite","spriteFrame","texture","setScale","setPosition","setTag","push","event","tag","currentTarget","getTag","log","points","checkAction","drawLine","scheduleOnce","clear","clickPass","checkEnable","targetA","targetB","needCheckVal","checkDoublePass","checkDoublePoint","a_points","getPointAround","b_points","inflec_point","_ok","_item","result","a","b","target","selectTarget","clickTarget","map","checkGameSuccess","every","winSize","drawNode","DrawNode","Canvas","instance","parent","_sgNode","drawSegment","height","color","times","toString","indexOf","sort","random0To1","tip","findTip","updateLayout","_map","_pass","targetPointA","targetPointB","updateDoublePoint","_","runAction","moveTo"],"mappings":"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","file":"Game2.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["let Global = require(\"./common/Global\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        box: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        picArrs: {\r\n            default: [],\r\n            type: [cc.SpriteFrame]\r\n        },\r\n\r\n        refreshBtn: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n\r\n        backBtn: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n    },\r\n\r\n    ctor() {\r\n        // 存放所有盒子的数据结构\r\n        this.arr = [];\r\n        // 存放所有的盒子实例\r\n        this._boxArrs = [];\r\n        // 存放选择的盒子\r\n        this.selectId = null;\r\n        // 存放点击的盒子\r\n        this.clickId = null;\r\n        // 记录是否可以消除\r\n        this.pass = false;\r\n        // 存放划线元素\r\n        this._lineNodes = [];\r\n        // 行\r\n        this.row = Global._type;\r\n        // 列\r\n        this.col = Global._type;\r\n    },\r\n\r\n    onLoad() {\r\n        this.gameStart();\r\n        \r\n        this.refreshBtn.node.on(cc.Node.EventType.TOUCH_END, event => {\r\n            this.gameStart();\r\n        })\r\n        \r\n        this.backBtn.node.on(cc.Node.EventType.TOUCH_END, event => {\r\n            cc.director.loadScene('Began');\r\n        })\r\n    },\r\n\r\n    gameStart() {\r\n        if (this._boxArrs.length > 0) {\r\n            this._boxArrs.forEach(item => {\r\n                cc.isValid(item) && item.destroy();\r\n            })\r\n            this._boxArrs = [];\r\n        }\r\n        // 随机图片\r\n        let _randomArr = this.picArrs.slice(0, this.row);\r\n        // 屏幕宽度\r\n        const winSizeW = cc.director.getWinSize().width;\r\n        // 展示的宽度\r\n        const showW = 500;\r\n\r\n        // 获取随机数组\r\n        const arrs = this.getSortArrs(_randomArr, this.row, this.col);\r\n        if (arrs.length === 0) return;\r\n\r\n        // 计算每个盒子宽度\r\n        this._boxWidth = showW / this.col;\r\n\r\n        // 初始化数据结构(+2表示所有盒子外面套多一层没有null的空盒子作为路径)\r\n        for (let i = 0; i < this.row + 2; i++) {\r\n            for (let j = 0; j < this.col + 2; j++) {\r\n                let o = {\r\n                    point: [j, i],\r\n                    box: null,\r\n                    val: null,\r\n                    pos: null,\r\n                    index: j + i * (this.col + 2)\r\n                }\r\n                let x = -winSizeW / 2 + (winSizeW - this._boxWidth * this.col) / 2 + (j - 1 / 2) * this._boxWidth;\r\n                let y = 270 - (i - 1) * this._boxWidth;\r\n                o.pos = cc.p(x, y);\r\n\r\n                if (i !== 0 && j !== 0 && i !== this.col + 1 && j !== this.row + 1) {\r\n                    let index = (j - 1) + (i - 1) * this.col;\r\n                    o.val = arrs[index].type;\r\n                    let box = cc.instantiate(this.box);\r\n                    this.node.addChild(box);\r\n\r\n                    let dynamicNode = new cc.Node();\r\n                    let sp = dynamicNode.addComponent(cc.Sprite);\r\n                    sp.spriteFrame = arrs[index].texture;\r\n                    box.addChild(dynamicNode)\r\n\r\n                    // let textLabel = box.getChildByName(\"label\");\r\n                    // textLabel.getComponent(cc.Label).string = o.val;\r\n                    box.setScale(this._boxWidth / box.width);\r\n                    box.setPosition(o.pos);\r\n                    box.setTag(o.index);\r\n                    o.box = box;\r\n                    this._boxArrs.push(box);\r\n\r\n                    // 绑定点击事件\r\n                    box.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                        // let id = +event.currentTarget.getChildByName('label').getComponent(cc.Label).string;\r\n                        let tag = event.currentTarget.getTag();\r\n                        if (!this.arr[tag].box) return;\r\n                        if (!this.selectId) {\r\n                            this.selectId = tag;\r\n                            this.pass = false;\r\n                            cc.log(\"selectId = \", this.arr[tag].val);\r\n                        } else {\r\n                            if (tag === this.selectId) return;\r\n                            this.clickId = tag;\r\n                            let points = this.checkAction(this.arr[this.selectId], this.arr[tag], true);\r\n                            if (points.length == 0) {\r\n                                this.selectId = null;\r\n                            } else {\r\n                                for (let i = 0; i < points.length - 1; i++) {\r\n                                    this.drawLine(points[i], points[i + 1]);\r\n                                }\r\n                                this.scheduleOnce(() => {\r\n                                    this._lineNodes.forEach((item) => {\r\n                                        item.clear();\r\n                                    })\r\n                                    this.clickPass();\r\n                                }, 0.3)\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                this.arr[o.index] = o;\r\n            }\r\n        }\r\n        // 检测是否无解\r\n        this.checkEnable();\r\n    },\r\n\r\n    // 检查两个点是否可以划掉 返回所有拐点数组 第三个参数needCheckVal表示是否需要判断两个点的val是否一致即是否需要判断是同张图片\r\n    checkAction(targetA, targetB, needCheckVal) {\r\n        if (!this.checkDoublePass(targetA, targetB) && needCheckVal) return [];\r\n        if ((targetA.point[0] === targetB.point[0] || targetA.point[1] === targetB.point[1]) && this.checkDoublePoint(targetA, targetB)) {\r\n            return [targetA, targetB];\r\n        }\r\n        let a_points = this.getPointAround(targetA),\r\n            b_points = this.getPointAround(targetB),\r\n            inflec_point = null,\r\n            _ok = false;\r\n        a_points.forEach((item) => {\r\n            if (_ok) return;\r\n            b_points.forEach((_item) => {\r\n                if (item.index === _item.index) {\r\n                    inflec_point = item;\r\n                    _ok = true;\r\n                    return;\r\n                }\r\n            })\r\n        })\r\n        if (inflec_point) {\r\n            return [targetA, inflec_point, targetB];\r\n        } else {\r\n            let result = [];\r\n            a_points.forEach((item) => {\r\n                if (this.pass) return;\r\n                b_points.forEach((_item) => {\r\n                    if ((item.point[0] === _item.point[0] || item.point[1] === _item.point[1]) && this.checkDoublePoint(item, _item)) {\r\n                        this.pass = true;\r\n                        result = [targetA, item, _item, targetB];\r\n                    }\r\n                })\r\n            })\r\n            return result\r\n        }\r\n    },\r\n\r\n    // 判断两个点的值是否一致\r\n    checkDoublePass(a, b) {\r\n        return a.val === b.val\r\n    },\r\n\r\n    // 判断两个同一直线的点之间的格子是否中间有阻碍\r\n    checkDoublePoint(a, b) {\r\n        if (a.point[0] === b.point[0]) {\r\n            if (a.point[1] > b.point[1]) {\r\n                for (let i = b.point[1] + 1; i < a.point[1]; i++) {\r\n                    let index = a.point[0] + i * (this.row + 2);\r\n                    if (this.arr[index].val) return false;\r\n                }\r\n            } else {\r\n                for (let i = b.point[1] - 1; i > a.point[1]; i--) {\r\n                    let index = a.point[0] + i * (this.row + 2);\r\n                    if (this.arr[index].val) return false;\r\n                }\r\n            }\r\n        } else {\r\n            if (a.point[0] > b.point[0]) {\r\n                for (let i = b.point[0] + 1; i < a.point[0]; i++) {\r\n                    let index = i + b.point[1] * (this.row + 2);\r\n                    if (this.arr[index].val) return false;\r\n                }\r\n            } else {\r\n                for (let i = b.point[0] - 1; i > a.point[0]; i--) {\r\n                    let index = i + b.point[1] * (this.row + 2);\r\n                    if (this.arr[index].val) return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    // 找出某个点扩散的所有可行路径\r\n    getPointAround(target) {\r\n        let points = [];\r\n        // 上\r\n        for (let i = target.point[1] - 1; i >= 0; i--) {\r\n            let index = target.point[0] + i * (this.col + 2);\r\n            if (!this.arr[index].val)\r\n                points.push(this.arr[index]);\r\n            else\r\n                break\r\n        }\r\n        // 右\r\n        for (let i = target.point[0] + 1; i < this.col + 2; i++) {\r\n            let index = i + target.point[1] * (this.col + 2);\r\n            if (!this.arr[index].val)\r\n                points.push(this.arr[index]);\r\n            else\r\n                break\r\n        }\r\n        // 下\r\n        for (let i = target.point[1] + 1; i < this.row + 2; i++) {\r\n            let index = target.point[0] + i * (this.col + 2);\r\n            if (!this.arr[index].val)\r\n                points.push(this.arr[index]);\r\n            else\r\n                break\r\n        }\r\n        // 左\r\n        for (let i = target.point[0] - 1; i >= 0; i--) {\r\n            let index = i + target.point[1] * (this.col + 2);\r\n            if (!this.arr[index].val)\r\n                points.push(this.arr[index]);\r\n            else\r\n                break\r\n        }\r\n        return points\r\n    },\r\n\r\n    // 通过\r\n    clickPass() {\r\n        let selectTarget = this.arr[this.selectId];\r\n        let clickTarget = this.arr[this.clickId];\r\n        [selectTarget, clickTarget].map((item) => {\r\n            item.box.destroy();\r\n            item.box = null;\r\n            item.val = null;\r\n        })\r\n        this.selectId = null;\r\n        this.checkGameSuccess();\r\n    },\r\n\r\n    // 检查是否结束游戏\r\n    checkGameSuccess() {\r\n        let result = this.arr.every(item => !item.box);\r\n        if (result) {\r\n            cc.director.loadScene('Pass');\r\n        } else {\r\n            this.checkEnable();\r\n        }\r\n    },\r\n\r\n    // 划线\r\n    drawLine(a, b) {\r\n        const winSize = cc.director.getWinSize();\r\n        let drawNode = new cc.DrawNode();\r\n        cc.Canvas.instance.node.parent._sgNode.addChild(drawNode);\r\n        drawNode.drawSegment(cc.p(a.pos.x + winSize.width / 2, a.pos.y + winSize.height / 2),\r\n            cc.p(b.pos.x + winSize.width / 2, b.pos.y + winSize.height / 2), 5, cc.color(265, 1, 0, 255));\r\n        this._lineNodes.push(drawNode);\r\n    },\r\n\r\n    getSortArrs(arrs, row, col) {\r\n        let result = [];\r\n        let times = row * col / arrs.length;\r\n        if (times.toString().indexOf(\".\") >= 0 || times % 2 !== 0) {\r\n            cc.log(\"随机图片的个数不平均\");\r\n            return result;\r\n        }\r\n        for (let i = 0; i < arrs.length; i++) {\r\n            for (let j = 0; j < times; j++) result.push({\r\n                // +1是为了不让 索引 == 0 方便后面判断\r\n                type: i + 1,\r\n                texture: arrs[i]\r\n            })\r\n        }\r\n        // 随机打乱顺序\r\n        result.sort((a, b) => cc.random0To1() > 0.5 ? 1 : -1);\r\n        return result;\r\n    },\r\n\r\n    // 检查是否无解\r\n    checkEnable() {\r\n        // 不存在可提示的即无解\r\n        let tip = this.findTip();\r\n        if (tip.length == 0) {\r\n            cc.log(\"无解!!! 替换位置\")\r\n            this.updateLayout();\r\n        }\r\n    },\r\n\r\n    // 提示\r\n    findTip() {\r\n        let _map = [];\r\n        this.arr.forEach((item) => {\r\n            if (item.box) {\r\n                _map[item.val] ? _map[item.val].push(item) : (_map[item.val] = [item]);\r\n            }\r\n        })\r\n        let _pass = false;\r\n        let result = [];\r\n        _map.forEach((item) => {\r\n            if (_pass) return;\r\n            for (let i = 0; i < item.length; i++) {\r\n                if (_pass) break;\r\n                for (let j = i + 1; j < item.length; j++) {\r\n                    if (_pass) break;\r\n                    let points = this.checkAction(item[i], item[j], true);\r\n                    if (points.length > 0) {\r\n                        _pass = true;\r\n                        result = points;\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return result\r\n    },\r\n\r\n    // 无解的情况下再次打乱布局 保证有解\r\n    updateLayout() {\r\n        let _pass = false;\r\n        this.arr.forEach((item) => {\r\n            if (_pass) return;\r\n\r\n            // 找到随意的一个还没划掉的点C\r\n            if (item.box) {\r\n\r\n                // 找出准备替换位置的两个点A(同C一样的值)，B(不同C的值且能跟C划掉)\r\n                let targetPointA,\r\n                    targetPointB;\r\n\r\n                this.arr.forEach((_item) => {\r\n                    if (!_item.box) return;\r\n                    if (!targetPointA && item.val === _item.val && item.index !== _item.index) {\r\n                        targetPointA = _item;\r\n                    }\r\n                    let points = this.checkAction(item, _item, false);\r\n                    if (!targetPointB && item.val !== _item.val && points.length > 0) {\r\n                        targetPointB = _item;\r\n                    }\r\n                    // 找到两个点就停止内循环减少算法计算\r\n                    if (targetPointA && targetPointB) return;\r\n                })\r\n\r\n                // 找到两个点就替换两个点的位置并停止外循环减少算法计算\r\n                if (targetPointA && targetPointB) {\r\n                    this.updateDoublePoint(targetPointA, targetPointB);\r\n                    _pass = true;\r\n                }\r\n            }\r\n        })\r\n    },\r\n\r\n    // 替换两个点的盒子\r\n    updateDoublePoint(targetA, targetB) {\r\n        let _ = {\r\n            val: targetA.val,\r\n            box: targetA.box,\r\n        }\r\n        targetA.val = targetB.val;\r\n        targetA.box = targetB.box;\r\n        targetB.val = _.val;\r\n        targetB.box = _.box;\r\n\r\n        [targetA, targetB].map((item) => {\r\n            item.box.setTag(item.index);\r\n            item.box.runAction(cc.moveTo(0.3, item.pos));\r\n        })\r\n    }\r\n\r\n});\r\n"]}