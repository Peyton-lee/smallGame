{"version":3,"sources":["Game2.js"],"names":["Global","require","cc","Class","extends","Component","properties","box","default","type","Prefab","picArrs","SpriteFrame","refreshBtn","Button","ctor","arr","_boxArrs","selectId","clickId","pass","_lineNodes","row","_type","col","onLoad","gameStart","node","on","Node","EventType","TOUCH_END","length","forEach","isValid","item","destroy","_randomArr","slice","winSizeW","director","getWinSize","width","showW","arrs","getSortArrs","_boxWidth","i","j","o","point","val","pos","index","x","y","p","instantiate","addChild","dynamicNode","sp","addComponent","Sprite","spriteFrame","texture","setScale","setPosition","setTag","push","event","tag","currentTarget","getTag","log","points","checkAction","drawLine","scheduleOnce","clear","clickPass","checkEnable","targetA","targetB","needCheckVal","checkDoublePass","checkDoublePoint","a_points","getPointAround","b_points","inflec_point","_ok","_item","result","a","b","target","selectTarget","clickTarget","map","checkGameSuccess","every","loadScene","winSize","drawNode","DrawNode","Canvas","instance","parent","_sgNode","drawSegment","height","color","times","toString","indexOf","sort","random0To1","tip","findTip","updateLayout","_map","_pass","targetPointA","targetPointB","updateDoublePoint","_","runAction","moveTo"],"mappings":"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","file":"Game2.js","sourceRoot":"../../../../assets/Script","sourcesContent":["let Global = require(\"./common/Global\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        box: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        picArrs: {\n            default: [],\n            type: [cc.SpriteFrame]\n        },\n\n        refreshBtn: {\n            default: null,\n            type: cc.Button\n        }\n    },\n\n    ctor() {\n        // 存放所有盒子的数据结构\n        this.arr = [];\n        // 存放所有的盒子实例\n        this._boxArrs = [];\n        // 存放选择的盒子\n        this.selectId = null;\n        // 存放点击的盒子\n        this.clickId = null;\n        // 记录是否可以消除\n        this.pass = false;\n        // 存放划线元素\n        this._lineNodes = [];\n        // 行\n        this.row = Global._type;\n        // 列\n        this.col = Global._type;\n    },\n\n    onLoad() {\n        this.gameStart();\n        \n        this.refreshBtn.node.on(cc.Node.EventType.TOUCH_END, event => {\n            this.gameStart();\n        })\n    },\n\n    gameStart() {\n        if (this._boxArrs.length > 0) {\n            this._boxArrs.forEach(item => {\n                cc.isValid(item) && item.destroy();\n            })\n            this._boxArrs = [];\n        }\n        // 随机图片\n        let _randomArr = this.picArrs.slice(0, this.row);\n        // 获取所有坐标的数组长度\n        const length = (this.row + 2) * (this.col + 2);\n        // 屏幕宽度\n        const winSizeW = cc.director.getWinSize().width;\n        // 展示的宽度\n        const showW = 500;\n\n        // 获取随机数组\n        const arrs = this.getSortArrs(_randomArr, this.row, this.col);\n        if (arrs.length === 0) return;\n\n        // 计算每个盒子宽度\n        this._boxWidth = showW / this.col;\n\n        // 初始化数据结构(+2表示所有盒子外面套多一层没有null的空盒子作为路径)\n        for (let i = 0; i < this.row + 2; i++) {\n            for (let j = 0; j < this.col + 2; j++) {\n                let o = {\n                    point: [j, i],\n                    box: null,\n                    val: null,\n                    pos: null,\n                    index: j + i * (this.col + 2)\n                }\n                let x = -winSizeW / 2 + (winSizeW - this._boxWidth * this.col) / 2 + (j - 1 / 2) * this._boxWidth;\n                let y = 250 - (i - 1) * this._boxWidth;\n                o.pos = cc.p(x, y);\n\n                if (i !== 0 && j !== 0 && i !== this.col + 1 && j !== this.row + 1) {\n                    let index = (j - 1) + (i - 1) * this.col;\n                    o.val = arrs[index].type;\n                    let box = cc.instantiate(this.box);\n                    this.node.addChild(box);\n\n                    let dynamicNode = new cc.Node();\n                    let sp = dynamicNode.addComponent(cc.Sprite);\n                    sp.spriteFrame = arrs[index].texture;\n                    box.addChild(dynamicNode)\n\n                    // let textLabel = box.getChildByName(\"label\");\n                    // textLabel.getComponent(cc.Label).string = o.val;\n                    box.setScale(this._boxWidth / box.width);\n                    box.setPosition(o.pos);\n                    box.setTag(o.index);\n                    o.box = box;\n                    this._boxArrs.push(box);\n\n                    // 绑定点击事件\n                    box.on(cc.Node.EventType.TOUCH_END, (event) => {\n                        // let id = +event.currentTarget.getChildByName('label').getComponent(cc.Label).string;\n                        let tag = event.currentTarget.getTag();\n                        if (!this.arr[tag].box) return;\n                        if (!this.selectId) {\n                            this.selectId = tag;\n                            this.pass = false;\n                            cc.log(\"selectId = \", this.arr[tag].val);\n                        } else {\n                            if (tag === this.selectId) return;\n                            this.clickId = tag;\n                            let points = this.checkAction(this.arr[this.selectId], this.arr[tag], true);\n                            if (points.length == 0) {\n                                this.selectId = null;\n                            } else {\n                                for (let i = 0; i < points.length - 1; i++) {\n                                    this.drawLine(points[i], points[i + 1]);\n                                }\n                                this.scheduleOnce(() => {\n                                    this._lineNodes.forEach((item) => {\n                                        item.clear();\n                                    })\n                                    this.clickPass();\n                                }, 0.3)\n                            }\n                        }\n                    })\n                }\n                this.arr[o.index] = o;\n            }\n        }\n        // 检测是否无解\n        this.checkEnable();\n    },\n\n    // 检查两个点是否可以划掉 返回所有拐点数组 第三个参数needCheckVal表示是否需要判断两个点的val是否一致即是否需要判断是同张图片\n    checkAction(targetA, targetB, needCheckVal) {\n        if (!this.checkDoublePass(targetA, targetB) && needCheckVal) return [];\n        if ((targetA.point[0] === targetB.point[0] || targetA.point[1] === targetB.point[1]) && this.checkDoublePoint(targetA, targetB)) {\n            return [targetA, targetB];\n        }\n        let a_points = this.getPointAround(targetA),\n            b_points = this.getPointAround(targetB),\n            inflec_point = null,\n            _ok = false;\n        a_points.forEach((item) => {\n            if (_ok) return;\n            b_points.forEach((_item) => {\n                if (item.index === _item.index) {\n                    inflec_point = item;\n                    _ok = true;\n                    return;\n                }\n            })\n        })\n        if (inflec_point) {\n            return [targetA, inflec_point, targetB];\n        } else {\n            let result = [];\n            a_points.forEach((item) => {\n                if (this.pass) return;\n                b_points.forEach((_item) => {\n                    if ((item.point[0] === _item.point[0] || item.point[1] === _item.point[1]) && this.checkDoublePoint(item, _item)) {\n                        this.pass = true;\n                        result = [targetA, item, _item, targetB];\n                    }\n                })\n            })\n            return result\n        }\n    },\n\n    // 判断两个点的值是否一致\n    checkDoublePass(a, b) {\n        return a.val === b.val\n    },\n\n    // 判断两个同一直线的点之间的格子是否中间有阻碍\n    checkDoublePoint(a, b) {\n        if (a.point[0] === b.point[0]) {\n            if (a.point[1] > b.point[1]) {\n                for (let i = b.point[1] + 1; i < a.point[1]; i++) {\n                    let index = a.point[0] + i * (this.row + 2);\n                    if (this.arr[index].val) return false;\n                }\n            } else {\n                for (let i = b.point[1] - 1; i > a.point[1]; i--) {\n                    let index = a.point[0] + i * (this.row + 2);\n                    if (this.arr[index].val) return false;\n                }\n            }\n        } else {\n            if (a.point[0] > b.point[0]) {\n                for (let i = b.point[0] + 1; i < a.point[0]; i++) {\n                    let index = i + b.point[1] * (this.row + 2);\n                    if (this.arr[index].val) return false;\n                }\n            } else {\n                for (let i = b.point[0] - 1; i > a.point[0]; i--) {\n                    let index = i + b.point[1] * (this.row + 2);\n                    if (this.arr[index].val) return false;\n                }\n            }\n        }\n        return true;\n    },\n\n    // 找出某个点扩散的所有可行路径\n    getPointAround(target) {\n        let points = [];\n        // 上\n        for (let i = target.point[1] - 1; i >= 0; i--) {\n            let index = target.point[0] + i * (this.col + 2);\n            if (!this.arr[index].val)\n                points.push(this.arr[index]);\n            else\n                break\n        }\n        // 右\n        for (let i = target.point[0] + 1; i < this.col + 2; i++) {\n            let index = i + target.point[1] * (this.col + 2);\n            if (!this.arr[index].val)\n                points.push(this.arr[index]);\n            else\n                break\n        }\n        // 下\n        for (let i = target.point[1] + 1; i < this.row + 2; i++) {\n            let index = target.point[0] + i * (this.col + 2);\n            if (!this.arr[index].val)\n                points.push(this.arr[index]);\n            else\n                break\n        }\n        // 左\n        for (let i = target.point[0] - 1; i >= 0; i--) {\n            let index = i + target.point[1] * (this.col + 2);\n            if (!this.arr[index].val)\n                points.push(this.arr[index]);\n            else\n                break\n        }\n        return points\n    },\n\n    // 通过\n    clickPass() {\n        let selectTarget = this.arr[this.selectId];\n        let clickTarget = this.arr[this.clickId];\n        [selectTarget, clickTarget].map((item) => {\n            item.box.destroy();\n            item.box = null;\n            item.val = null;\n        })\n        this.selectId = null;\n        this.checkGameSuccess();\n    },\n\n    // 检查是否结束游戏\n    checkGameSuccess() {\n        let result = this.arr.every(item => !item.box);\n        if (result) {\n            cc.director.loadScene('Pass');\n        } else {\n            this.checkEnable();\n        }\n    },\n\n    // 划线\n    drawLine(a, b) {\n        const winSize = cc.director.getWinSize();\n        let drawNode = new cc.DrawNode();\n        cc.Canvas.instance.node.parent._sgNode.addChild(drawNode);\n        drawNode.drawSegment(cc.p(a.pos.x + winSize.width / 2, a.pos.y + winSize.height / 2),\n            cc.p(b.pos.x + winSize.width / 2, b.pos.y + winSize.height / 2), 5, cc.color(265, 1, 0, 255));\n        this._lineNodes.push(drawNode);\n    },\n\n    getSortArrs(arrs, row, col) {\n        let result = [];\n        let times = row * col / arrs.length;\n        if (times.toString().indexOf(\".\") >= 0 || times % 2 !== 0) {\n            cc.log(\"随机图片的个数不平均\");\n            return result;\n        }\n        for (let i = 0; i < arrs.length; i++) {\n            for (let j = 0; j < times; j++) result.push({\n                // +1是为了不让 索引 == 0 方便后面判断\n                type: i + 1,\n                texture: arrs[i]\n            })\n        }\n        // 随机打乱顺序\n        result.sort((a, b) => cc.random0To1() > 0.5 ? 1 : -1);\n        return result;\n    },\n\n    // 检查是否无解\n    checkEnable() {\n        // 不存在可提示的即无解\n        let tip = this.findTip();\n        if (tip.length == 0) {\n            cc.log(\"无解!!! 替换位置\")\n            this.updateLayout();\n        }\n    },\n\n    // 提示\n    findTip() {\n        let _map = [];\n        this.arr.forEach((item) => {\n            if (item.box) {\n                _map[item.val] ? _map[item.val].push(item) : (_map[item.val] = [item]);\n            }\n        })\n        let _pass = false;\n        let result = [];\n        _map.forEach((item) => {\n            if (_pass) return;\n            for (let i = 0; i < item.length; i++) {\n                if (_pass) break;\n                for (let j = i + 1; j < item.length; j++) {\n                    if (_pass) break;\n                    let points = this.checkAction(item[i], item[j], true);\n                    if (points.length > 0) {\n                        _pass = true;\n                        result = points;\n                    }\n                }\n            }\n        })\n        return result\n    },\n\n    // 无解的情况下再次打乱布局 保证有解\n    updateLayout() {\n        let _pass = false;\n        this.arr.forEach((item) => {\n            if (_pass) return;\n\n            // 找到随意的一个还没划掉的点C\n            if (item.box) {\n\n                // 找出准备替换位置的两个点A(同C一样的值)，B(不同C的值且能跟C划掉)\n                let targetPointA,\n                    targetPointB;\n\n                this.arr.forEach((_item) => {\n                    if (!_item.box) return;\n                    if (!targetPointA && item.val === _item.val && item.index !== _item.index) {\n                        targetPointA = _item;\n                    }\n                    let points = this.checkAction(item, _item, false);\n                    if (!targetPointB && item.val !== _item.val && points.length > 0) {\n                        targetPointB = _item;\n                    }\n                    // 找到两个点就停止内循环减少算法计算\n                    if (targetPointA && targetPointB) return;\n                })\n\n                // 找到两个点就替换两个点的位置并停止外循环减少算法计算\n                if (targetPointA && targetPointB) {\n                    this.updateDoublePoint(targetPointA, targetPointB);\n                    _pass = true;\n                }\n            }\n        })\n    },\n\n    // 替换两个点的盒子\n    updateDoublePoint(targetA, targetB) {\n        let _ = {\n            val: targetA.val,\n            box: targetA.box,\n        }\n        targetA.val = targetB.val;\n        targetA.box = targetB.box;\n        targetB.val = _.val;\n        targetB.box = _.box;\n\n        [targetA, targetB].map((item) => {\n            item.box.setTag(item.index);\n            item.box.runAction(cc.moveTo(0.3, item.pos));\n        })\n    }\n\n});\n"]}